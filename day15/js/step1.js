/* 
    - 자료형
        0.undifined         : 자료없다.
         1.숫자형 2.문자열 3.불 
         4.배열[]           : 여래개의 자료를 하나의 자료 집합
            - 성질, 상태, 필드 = 현재 데이터의 상태
         5.함수(){}         : 코드 집합
            - 행위, 이벤트, 메소드

    함수
        - 코드의 집합을 나타내는 자료형
        - 용어
            - 함수호출  : 함수사용할때. f(x)
            - 매개변수  : 함수호출할때 함수내부{} 내부에 여러가지 자료를 넣을때 = 인수
                - 변수, 상수, 함수, 객체, 배열 == 자료
            - 리턴값    : 함수호출해서 죄종적으로 나오는 결과 = 반환 return
                - void : 없다.
            
            - 종류
                - 1. 매개변수O 리턴O
                    function 함수(x,y){z = x+y; return z;}

                - 2. 매개변수O 리턴X
                    function 함수(x,y){z = x+y;}

                - 3. 매개변수X 리턴O
                    function 함수(){return 3+3;} 

                - 4. 매개변수X 리턴X
                    function 함수(){} 

        - 함수 사용하면 좋은점.
            1. 반복되는 코드를 한번에 정의 하고 필요해 따라 호출해서 반복 작업을 피 할 수 있다. [코드 양 줄일수 있다.]
            2. 간 프로그램을 기능 별로 나눠 여러 함수로 나눠 작성하면 모듈화[조각/쪼개서 단위]로 전체 코드의 가독성[읽고 관리가]이 좋다.
            3. 기능별(함수별)로 수정이 가능 하므로 유지보수가 쉽다.

        - 1. 익명함수 : 이름이 없는 함수.
            - function(){}   : 함수이름이 없어서 호출이 불가능.
            - 익명함수를 변수/상수에 넣자.. 그럼 변수/상수 호출시 함수가 실행.
                - const/let 함수명 = function(){}

        - 2. 선언적함수 : 이름이 있는 함수.
            - function 함수명(){}           : 함수에 이름이 있는 상태.

*/

// p.197 : *익명함수. 

// --------------------- 함수 선언부 S ---------------------
const 함수 = function(e){   
    // ================= 함수 내부 S ================= //
    console.log('함수 내부의 코드입니다..1');
    console.log('함수 내부의 코드입니다..2');
    console.log('함수 내부의 코드입니다..3');
    console.log('');
    // ================= 함수 내부 E ================= //
}
// --------------------- 함수 선언부 E ---------------------

함수(); // 함수 호출
함수(); // 함수 호출
// 함수2(); // 함수2 is not defined [오류]
console.log(typeof 함수)
console.log(함수)

// p.199 : 선언적 함수
function 선언함수(){    // function 함수명(){}
    // ================= 함수 내부 S ================= //
    console.log('선언함수 내부의 코드입니다..1');
    console.log('선언함수 내부의 코드입니다..2');
    console.log('선언함수 내부의 코드입니다..3');
    console.log('');
    // ================= 함수 내부 E ================= //
}   // f E

선언함수();
선언함수();
console.log(typeof 선언함수);
console.log(선언함수);

// function 테스트(x,y){z = Number(x)+Number(y); alarm(z)}
// function alarm(z){alert(z)};

// 테스트(prompt('숫자1'),prompt('숫자2'));

// p.201
// 1. 함수명 : 1. 'f', 매개변수 : 'x', 리턴값 : x+x;
function f(x){return x+x;}