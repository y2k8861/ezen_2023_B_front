JAVA와 JAVAScript 다르다

자바스크립트로 할 수 있는 것들
    1. 웹 클라이언트(서비스 제공받는) [HTML, CSS, JS]
    --------------- 2009년 이후 node.js ---------------
    2. 웹 서버(서비스 제공하는) [node.js] VS JAVA(spring)
    3. 모바일 [react native]
    4. 데스크탑 애플리케이션 [NW.js] vs JAVA(spring)
    5. 데이터베이스 관리 [NOSQL] vs SQL

- 텍스트 에디터
    프론트엔드   : VScode, 아톰 등등
    백엔드      : 이클립스, 인텔리제이(유료)

-브라우저 [클라이언트 입장]
    크롬, 엣지, 사파리 등등

-기본용어
    부호            : (모스부호[짧은 신호 또는 긴 신호] -> 전기상태[있다 또는 없다] - > 2진수[0 또는 1])
    코드            : 정보를 다른 형태로 변환하는 규칙[문법/도구]
                        [JAVA[규칙], HTML[규칙 <>], CSS[규칙 식별자{}], JS, Python]
    표현식          : 하나 이상의 값/정보 으로 표현될 수 있는 코드를 의미
    문장            : 표현식 한개이상 모인 것(명령문)
    프로그램        : 문장이 모인 것(명령문의 집합)
    프로세스        : 현재 실행중인 프로그램(스케줄링/스레드)
    응용프로그램    : 사용자가 사용할 수 있도록 만든 프로그램
    웹 애플리케이션 : 웹에서 사용하는 프로그램

                                                       >   웹 애플리케이션
    부호 > 코드 > 표현식 > 문장 > 프로그램    사용처 따라 >    앱 애플리케이션     
                                                       >   데스크탑 애플리케이션



    개발자/사람                                        컴퓨터
    <div> ------------------명령어------------------> [번역] 0101010110

    박스모델 <-----------------실행결과-----------------

    console.log("안녕") -----------명령어------------------> [번역]01010101101111

    안녕    <-----------------실행결과-----------------

- 키워드 : 언어들이 미리 만든 (기능이 들어간)단어들.
    !! : 키워드와 동일하게 이름을 정의하지말자!![중복되니까.]

- 식별자 : 이떠한 변수/함수/명령 등을 식별하기 위한 이름
    HTML/CSS : id, class, <마크업>
    JS : 변수/함수/클래스 등등
    1. 키워드사용불가 2. 숫자시작 불가 3. 특수문자는 _,$만 가능 4.공백가능 

- 주석 : 코드 설명
    HTML : <!-- 주석 -->
    CSS : /* 주석 */
    JS : 
        1. 한줄 주석 : // 한줄주석
        2. 여러줄주석 : /* 여러줄 주석 */

1. 입출력 방법[*2,6]
    1. alert()                  : 경고창(확인버튼) 출력함수
    2. console.log()            : console(개발자도구) 출력함수
    3. confirm()                : 확인창(확인=true/취소=false) 버튼 출력함수
    4. prompt()                 : 입력상자(input, 확인=true/취소=false) 입력
    5. document.write()         : HTML에 출력 함수
    6. document.특정식별자.html  : 특정 요소/마크업에 출력 함수

2. 기본 자료형
    - 자료 : 프로그램이 처리할 수 있는 모든 것
    - 자료형 : 자료 형태/모양/폼 나눠 놓은 것
        1. 숫자(number) 2. 문자열(string) 3.불(boolean)

            [숫자]
            1.숫자와 문자열 구분
                273 vs "273" 다르다.
            
            2.

            [문자열]
            1.문자열 표현방법 : '문자열' 또는 "문자열"
                주의할점 : 1. '문자열" 불가능
                           2. "''" 가능
                           3. '""' 가능

            2. 이스케이프/제어 문자
                1. \n : 줄바꿈
                2. \t : 들여쓰기
                3. \\ : 백슬래쉬 출력
                그 외 \",\' 연산자 출력시

            3. 문자열 연산자
                문자열 + 문자열         : 문자열 연결 연산자 ["문자열" + "문자열"]
                [인덱스]                : 문자열에서 인덱스(순서) 번쨰 문자 추줄
                                        - 인덱스 : 저장된 순서번호 = 인덱스 0번 시작
                                        "안녕하세요"
                                        [0][1][2][3][4]
                                        "안녕하세요"[0]     : 해당 문자열내 0번째 문자 => 안

                length                  : 문자열내 문자 개수
                    "안녕하세요".length : 해당 문자열내 문자 개수 => 5


3. 연산자 [연산/계산/논리 시 사용되는 특수문자]
    1. 산술 연산자 : 결과값 출력
        + 더하기, - 빼기, * 곱하기, / 나누기, % 나머지,

    2. 연결 연산자 : + 연결연산자
        숫자+숫자 [더하기]
        숫자+"문자열" [연결]
        "문자열"+"문자열 [연결]

    3. 비교연산자 : 비교 후 true/참 혹은 false/거짓 반환
        > 초과/크다
        < 미만/작다
        >= 이상/크거나 같다
        <= 이하/작거나 같다
        == 같다[데이터비교]
        === 같다[데이터/자료형 강력비교]
        != 같지않다[데이터비교]
        !== 같지않다[데이터/자료형 강력비교]

    4. 관계연산자 : 주로 비교연산자를 2개이상일때 사용 후 true/참 혹은 false/거짓 반환
        && : 이면서 면서 이고 모두 그리고 and조건 [모두 참이면 참]
        || : 이거나 거나 또는 하나라도 혹은 or조건 [하나만 참이면 참]
        !  : 반대 부정 not조건 [참 -> 거짓/ 거짓 -> 참]

    5. 증강연산자 : 1증가 혹은 1감소 
        ++ 1증가 [++변수 : 선위증가, 변수++: 후위증가]
        -- 1증가 [--변수 : 선위감소, 변수--: 후위감소]

    6. 대입연산자 : 오른쪽 데이터를 왼쪽에 넣어주기/대입/저장
        = 대입 [변수 + 10; 10이라는 데이터를 변수에 대입/저장]
        += 오른쪽 데이터를 왼쪽에 더한후에 왼쪽에 대입연산자
        -=, *=, /=, %= 등등
